<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <!-- parent pom -->
        <groupId>com.de.use.cases</groupId>
        <artifactId>application-server</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.de.use.cases.web.cache</groupId>
    <artifactId>cache-db</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <image.assemble.dir>${project.build.directory}/assemble</image.assemble.dir>
        <cache.image.name>${product.abbreavtion}-app-cache-db</cache.image.name>
        <cache.cluster.dir>/opt/redis-cluster</cache.cluster.dir>
    </properties>
    <dependencies>

        <!-- https://mvnrepository.com/artifact/org.jboss.weld.se/weld-se-core -->
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>3.1.1.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.inject/javax.inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>3.1.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.2.1.RELEASE</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-tomcat -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>2.2.1.RELEASE</version>
            <scope>provided</scope>
        </dependency>


    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/dist/docker</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${image.assemble.dir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <logDate>default</logDate>
                    <autoPull>${docker.pull}</autoPull>
                    <verbose>true</verbose>
                    <showLogs>true</showLogs>
                    <removeVolumes>true</removeVolumes>
                    <images>
                        <image>
                            <alias>${cache.image.name}</alias>
                            <name>${cache.image.name}</name>
                            <build>
                                <from>
                                    centos:7
                                </from>
                                <maintainer>akash.sah5@gmail.com</maintainer>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                                <ports>
                                    <port>6379</port>
                                    <port>16379</port>
                                    <port>6001</port>
                                </ports>
                                <env>
                                    <IMAGE_BUILD_VERSION>${project.version}</IMAGE_BUILD_VERSION>
                                    <IMAGE_BUILD_NUMBER>1.0.1</IMAGE_BUILD_NUMBER>
                                    <!--                                    <IMAGE_BUILD_TIMESTAMP>${build.timestamp}</IMAGE_BUILD_TIMESTAMP>-->
                                </env>
                                <volumes>
                                    <volume>/var${cache.cluster.dir}</volume>
                                </volumes>
                                <optimise>true</optimise>
                                <runCmds>
                                    <run>groupadd de -g 800</run>
                                    <run>useradd -u 811 --no-create-home --no-user-group --groups de -s /bin/sh ${cache.image.name}</run>
                                    <run>export BOOT_DIR=/tmp/install/boot.d</run>
                                    <run>yum install wget gcc-c++ ca-certificates nginx gettext-tools -y</run>
                                    <run>yum install kernel-devel make man -y</run>
                                    <run>mkdir -p /tmp/install</run>
                                    <run>/tmp/install/boot.sh</run>
                                    <run>chown -R 811:800 /var${cache.cluster.dir}</run>
                                    <run>chown -R 811:800 ${cache.cluster.dir}</run>
                                    <run>chmod 755 /tmp/install/startupscript.sh</run>
                                </runCmds>
                                <user>811</user>
                                <assembly>
                                    <mode>dir</mode>
                                    <basedir>/</basedir>
                                    <descriptor>assembly.xml</descriptor>
                                </assembly>
                                <entryPoint>
                                    <!-- shell form  -->
                                    <shell>/tmp/install/startupscript.sh</shell>
                                </entryPoint>
                            </build>
                            <run>
                                <env>
                                    <APP_SERVICE>app</APP_SERVICE>
                                    <EXTERNAL_ACCESS_HOST>${docker.host.address}</EXTERNAL_ACCESS_HOST>
                                    <EXTERNAL_ACCESS_PORT>443</EXTERNAL_ACCESS_PORT>
                                </env>
                                <ports>
                                    <port>app.port.http:8080</port>
                                    <port>app.port.https:8443</port>
                                </ports>

                                <!--                                <volumes>-->
                                <!--                                    <from>-->
                                <!--                                        <image>test-init-container</image>-->
                                <!--                                        <image>certs-vol</image>-->
                                <!--                                    </from>-->
                                <!--                                </volumes>-->

                                <user>811:800</user>

<!--                                <wait>-->
<!--                                    <time>300000</time>-->
<!--                                    <kill>50000</kill>-->
<!--                                    <http>-->
<!--                                        &lt;!&ndash;suppress MavenModelInspection &ndash;&gt;-->
<!--                                        <url>http://${docker.host.address}:${app.port.http}/home</url>-->
<!--                                        <method>GET</method>-->
<!--                                        <status>200</status>-->
<!--                                        <allowAllHosts>true</allowAllHosts>-->
<!--                                    </http>-->
<!--                                </wait>-->
                                <!--                                <links>-->
                                <!--                                    <link>${product.db.image.name}:db</link>-->
                                <!--                                </links>-->
                            </run>
                        </image>

                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <!--                    <execution>-->
                    <!--                        <id>push-image</id>-->
                    <!--                        <phase>deploy</phase>-->
                    <!--                        <goals>-->
                    <!--                            <goal>push</goal>-->
                    <!--                        </goals>-->
                    <!--                    </execution>-->
                    <execution>
                        <id>start-images</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-images</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.12</version>
                    </dependency>
                </dependencies>
<!--                <configuration>-->
<!--                    <excludedGroups>com.de.use.cases.server.IntegrationTest</excludedGroups>-->
<!--                </configuration>-->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.12</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <groups>com.de.use.cases.server.IntegrationTest</groups>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*.class</include>
                            </includes>
                            <runOrder>alphabetical</runOrder>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <systemPropertyVariables>
                                <app.test>${cache.image.name}</app.test>
                                <!--suppress MavenModelInspection -->
                                <app.port.http>${app.port.http}</app.port.http>
                                <!--suppress MavenModelInspection -->
                                <app.port.https>${app.port.https}</app.port.https>
                                <!--suppress MavenModelInspection -->
                                <app.web.server.net.HOST_NAME>${docker.host.address}</app.web.server.net.HOST_NAME>
                                <!--suppress MavenModelInspection -->
                                <app.web.server.test.port.http>${app.port.http}</app.web.server.test.port.http>
                                <!--suppress MavenModelInspection -->
                                <app.web.server.test.port.https>${app.port.https}</app.web.server.test.port.https>
                                <!--suppress MavenModelInspection -->
                                <app.container.id>${docker.container.${cache.image.name}.id}</app.container.id>

                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>