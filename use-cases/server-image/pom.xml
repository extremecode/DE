<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <!-- parent pom -->
        <groupId>com.de.use.cases</groupId>
        <artifactId>use-cases</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.de.use.cases.server</groupId>
    <artifactId>server-image</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <server.assemble.dir>${project.build.directory}/assemble</server.assemble.dir>
        <product.image.name>${product.abbreavtion}-app-server</product.image.name>
        <product.db.image.name>${product.abbreavtion}-app-db</product.db.image.name>
<!--        <docker.host.address>localhost</docker.host.address>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.de.use.cases.server</groupId>
            <artifactId>server</artifactId>
            <version>${server.version}</version>
            <classifier>product</classifier>
            <type>zip</type>
            <optional>false</optional>
        </dependency>
        <dependency>
            <groupId>com.de.use.cases.web.common</groupId>
            <artifactId>web-common</artifactId>
            <version>${web.common.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.de.use.cases.server</groupId>
                                    <artifactId>server</artifactId>
                                    <version>${server.version}</version>
                                    <classifier>product</classifier>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${server.assemble.dir}</outputDirectory>
                                    <destFileName>product.zip</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/wars</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
<!--        </plugins>-->
<!--    </build>-->

<!--    <build>-->
<!--        <resources>-->
<!--            <resource>-->
<!--                <directory>src/dist/docker</directory>-->
<!--                <filtering>false</filtering> &lt;!&ndash; includes binary files &ndash;&gt;-->
<!--                <includes>-->
<!--                    <include>**/*</include>-->
<!--                </includes>-->
<!--            </resource>-->
<!--        </resources>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-resources-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>generate-resources</phase>-->
<!--                        <goals>-->
<!--                            <goal>resources</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <outputDirectory>${dir.out.install}</outputDirectory>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->

<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>install-service</id>-->
<!--                        <phase>generate-resources</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <outputDirectory>${dir.out.install}/install/server/lib</outputDirectory>-->
<!--                            <stripVersion>true</stripVersion>-->
<!--                            <artifactItems>-->
<!--                                <artifactItem>-->
<!--                                    <groupId>org.jboss.resteasy</groupId>-->
<!--                                    <artifactId>resteasy-jackson2-provider</artifactId>-->
<!--                                    <version>${resteasy.version}</version>-->
<!--                                    <type>jar</type>-->
<!--                                </artifactItem>-->
<!--                                <artifactItem>-->
<!--                                    <groupId>com.fasterxml.jackson.module</groupId>-->
<!--                                    <artifactId>jackson-module-jaxb-annotations</artifactId>-->
<!--                                    <version>${jackson.version}</version>-->
<!--                                    <type>jar</type>-->
<!--                                </artifactItem>-->
<!--                                <artifactItem>-->
<!--                                    <groupId>com.fasterxml.jackson.core</groupId>-->
<!--                                    <artifactId>jackson-core</artifactId>-->
<!--                                    <version>${jackson.version}</version>-->
<!--                                    <type>jar</type>-->
<!--                                </artifactItem>-->
<!--                                <artifactItem>-->
<!--                                    <groupId>com.fasterxml.jackson.core</groupId>-->
<!--                                    <artifactId>jackson-databind</artifactId>-->
<!--                                    <version>${jackson.version}</version>-->
<!--                                    <type>jar</type>-->
<!--                                </artifactItem>-->
<!--                                <artifactItem>-->
<!--                                    <groupId>com.fasterxml.jackson.jaxrs</groupId>-->
<!--                                    <artifactId>jackson-jaxrs-json-provider</artifactId>-->
<!--                                    <version>${jackson.version}</version>-->
<!--                                    <type>jar</type>-->
<!--                                </artifactItem>-->
<!--                                <artifactItem>-->
<!--                                    <groupId>com.fasterxml.jackson.jaxrs</groupId>-->
<!--                                    <artifactId>jackson-jaxrs-base</artifactId>-->
<!--                                    <version>${jackson.version}</version>-->
<!--                                </artifactItem>-->
<!--                                <artifactItem>-->
<!--                                    <groupId>com.fasterxml.jackson.core</groupId>-->
<!--                                    <artifactId>jackson-annotations</artifactId>-->
<!--                                    <version>${jackson.version}</version>-->
<!--                                </artifactItem>-->
<!--                            </artifactItems>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <logDate>default</logDate>
                    <autoPull>${docker.pull}</autoPull>
                    <verbose>true</verbose>
                    <showLogs>true</showLogs>
                    <removeVolumes>true</removeVolumes>
                    <images>
                        <image>
                            <alias>${product.image.name}</alias>
                            <name>${product.image.name}</name>
                            <build>
                                <from>
                                    java:8
                                </from>
                                <maintainer>akash.sah5@gmail.com</maintainer>
                                <tags>
                                    <tag>${server.version}</tag>
                                </tags>
                                <ports>
                                    <port>8080</port>
                                    <port>8443</port>
                                </ports>
                                <env>
                                    <IMAGE_BUILD_VERSION>${server.version}</IMAGE_BUILD_VERSION>
                                    <IMAGE_BUILD_NUMBER>1.0.1</IMAGE_BUILD_NUMBER>
<!--                                    <IMAGE_BUILD_TIMESTAMP>${build.timestamp}</IMAGE_BUILD_TIMESTAMP>-->
                                </env>
                                <volumes>
                                    <volume>/var${server.install.dir}</volume>
                                </volumes>
                                <optimise>true</optimise>
                                <runCmds>
                                    <run>groupadd de -g 800</run>
                                    <run>useradd -u 811 --no-create-home --no-user-group --groups de -s /bin/sh ${product.image.name}</run>
                                    <run>mkdir -p /var${server.install.dir}</run>
                                    <run>mkdir -p ${app.logs.dir}</run>
                                    <run>chown -R 811:800 /var${server.install.dir}</run>
                                    <run>chown -R 811:800 ${server.install.dir}</run>
                                    <run>chmod 755 ${server.install.dir}/server/bin/standalone.sh</run>
                                </runCmds>
                                <user>811</user>
                                <assembly>
                                    <mode>dir</mode>
                                    <basedir>/</basedir>
                                    <descriptor>assembly.xml</descriptor>
                                </assembly>
                                <entryPoint>
                                    <!-- shell form  -->
                                    <shell>${server.install.dir}/server/bin/standalone.sh -b 0.0.0.0 -bmanagement=0.0.0.0 -c standalone-full.xml</shell>
                                </entryPoint>
                            </build>
                            <run>
                                <env>
                                    <APP_SERVICE>app</APP_SERVICE>
                                    <EXTERNAL_ACCESS_HOST>${docker.host.address}</EXTERNAL_ACCESS_HOST>
                                    <EXTERNAL_ACCESS_PORT>443</EXTERNAL_ACCESS_PORT>
                                </env>
                                <ports>
                                    <port>app.port.http:8080</port>
                                    <port>app.port.https:8443</port>
                                </ports>

<!--                                <volumes>-->
<!--                                    <from>-->
<!--                                        <image>test-init-container</image>-->
<!--                                        <image>certs-vol</image>-->
<!--                                    </from>-->
<!--                                </volumes>-->

                                <user>811:800</user>

                                <wait>
                                    <time>300000</time>
                                    <kill>50000</kill>
                                    <http>
                                        <!--suppress MavenModelInspection -->
                                        <url>http://${docker.host.address}:${app.port.http}/home</url>
                                        <method>GET</method>
                                        <status>200</status>
                                        <allowAllHosts>true</allowAllHosts>
                                    </http>
                                </wait>
                                <links>
                                    <link>${product.db.image.name}:db</link>
                                </links>
                            </run>
                        </image>

<!--                        <image>-->
<!--                            <alias>${product.db.image.name}</alias>-->
<!--                            <name>${product.db.image.name}</name>-->
<!--                            <build>-->
<!--                                <from>-->
<!--                                    postgres:9-->
<!--                                </from>-->
<!--                                <maintainer>akash.sah5@gmail.com</maintainer>-->
<!--                                <tags>-->
<!--                                    <tag>${server.version}</tag>-->
<!--                                </tags>-->
<!--                                <ports>-->
<!--                                    <port>5432</port>-->
<!--                                </ports>-->
<!--                                <env>-->
<!--                                    <IMAGE_BUILD_VERSION>${server.version}</IMAGE_BUILD_VERSION>-->
<!--                                    <IMAGE_BUILD_NUMBER>1.0.1</IMAGE_BUILD_NUMBER>-->
<!--                                    &lt;!&ndash;                                    <IMAGE_BUILD_TIMESTAMP>${build.timestamp}</IMAGE_BUILD_TIMESTAMP>&ndash;&gt;-->
<!--                                </env>-->
<!--                                <optimise>true</optimise>-->
<!--                            </build>-->
<!--                            <run>-->
<!--                                <ports>-->
<!--                                    <port>db.port.http:5432</port>-->
<!--                                </ports>-->
<!--                                <env>-->
<!--                                    <POSTGRES_SERVICE>${product.db.image.name}</POSTGRES_SERVICE>-->
<!--                                    <POSTGRES_USER>${product.abbreavtion}</POSTGRES_USER>-->
<!--                                    <POSTGRES_PASSWORD>${product.abbreavtion}</POSTGRES_PASSWORD>-->
<!--                                    <PG_EXTERNAL_ACCESS_PORT>${db.port.http}</PG_EXTERNAL_ACCESS_PORT>-->
<!--                                </env>-->


<!--                                <wait>-->
<!--                                    <log>database system is ready to accept connections</log>-->
<!--                                    <time>20000</time>-->
<!--                                </wait>-->
<!--                            </run>-->
<!--                        </image>-->


                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
<!--                    <execution>-->
<!--                        <id>push-image</id>-->
<!--                        <phase>deploy</phase>-->
<!--                        <goals>-->
<!--                            <goal>push</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
                    <execution>
                        <id>start-images</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-images</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.12</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <excludedGroups>com.de.use.cases.server.IntegrationTest</excludedGroups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.12</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <groups>com.de.use.cases.server.IntegrationTest</groups>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*.class</include>
                            </includes>
                            <runOrder>alphabetical</runOrder>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <systemPropertyVariables>
                                <app.test>${product.image.name}</app.test>
                                <!--suppress MavenModelInspection -->
                                <app.port.http>${app.port.http}</app.port.http>
                                <!--suppress MavenModelInspection -->
                                <app.port.https>${app.port.https}</app.port.https>
                                <!--suppress MavenModelInspection -->
                                <app.web.server.net.HOST_NAME>${docker.host.address}</app.web.server.net.HOST_NAME>
                                <!--suppress MavenModelInspection -->
                                <app.web.server.test.port.http>${app.port.http}</app.web.server.test.port.http>
                                <!--suppress MavenModelInspection -->
                                <nom.api.gateway.test.port.https>${app.port.https}</nom.api.gateway.test.port.https>
                                <!--suppress MavenModelInspection -->
                                <nom.api.gateway.container.id>${docker.container.${product.image.name}.id}</nom.api.gateway.container.id>

                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>